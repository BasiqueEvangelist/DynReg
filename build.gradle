plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name 'Basiquemaven'
		url 'https://basique.top/maven'
	}
	maven {
		url "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven { url 'https://maven.nucleoid.xyz' }
}


sourceSets {
	testmod {
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += main.compileClasspath
	}

	ap {

	}
}

loom {
	runs {
		testmodClient {
			client()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Client"
			source sourceSets.testmod
		}
		testmodServer {
			server()
			ideConfigGenerated project.rootProject == project
			name = "Testmod Server"
			source sourceSets.testmod
		}
	}

	runConfigs.forEach {
		it.vmArg "-Dmixin.debug.export=true"
		it.vmArg "-Ddynreg.debug=true"
	}

	accessWidenerPath = file("src/main/resources/dynreg.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly "me.basiqueevangelist.repackaged-qsl.core:qsl_base:${project.quilt_base_version}+1.18.2"
	modCompileOnly "me.basiqueevangelist.repackaged-qsl.core:registry:1.0.0+1.18.2"
	modCompileOnly "me.basiqueevangelist.repackaged-qsl.core:resource_loader:1.0.0+1.18.2"

	compileOnly sourceSets.ap.output
	annotationProcessor sourceSets.ap.runtimeClasspath

	modCompileOnly "maven.modrinth:lithium:${project.lithium_version}"
	modLocalRuntime "maven.modrinth:lazydfu:0.1.3"
//	modLocalRuntime "maven.modrinth:embedded_assets:v1.1.2+1.19-fabric"

	modCompileOnly "eu.pb4:polymer:0.2.23+1.19.2"
	modLocalRuntime "eu.pb4:polymer:0.2.23+1.19.2"

	apImplementation "com.squareup:javapoet:1.13.0"

	testmodImplementation sourceSets.main.output
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
